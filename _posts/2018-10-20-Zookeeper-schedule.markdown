---
layout:     post
title:      "基于Zookeeper的调度系统实现"
date:       2018-10-20
author:     "yzgu"
header-img: "img/post-bg-20181002.jpg"
tags:
    - TBSchedule
---


## 关于调度系统的碎碎念

严格意义上算的话，调度系统其实是个很古早的话题了，记得13年前后的时候从code.taobao.org上很是下载了一些东西，TBSchedule，DataX1.0，智通大师的一个jvm模型，再有别的就记不大清了，后来过了两年TBSchedule从taocode上下了，再过了两年连code.taobao都没了，互联网的浪潮里起起落落，很多很有意思的东西就这样淹没在长河里，不禁让人顿生时光荏苒之类的俗套感慨。

其实最开始调度一般都是直接Crontab任务操作，一个巨大无比的Crontab执行列表基本上可以毁灭一切接手运维对未来的美好想象，这种全靠记忆和文档维持作业之间依赖关系与执行的很快被java内置的Timer和TimerTask以及后来的Quartz所取代，但是这两种本质上还是存在依赖jvm，依赖任务本身执行情况进而导致了可能存在的单点，容错，扩展性上的问题，很自然的大家把目光转移向数据库，不过数据库并不完美，由于调度系统本身主机，执行器，作业三者都存在大量的上下线和分配动作，频繁的数据库操作，以及抢占式的调度都带来了问题，于是又一次很自然的大家把目光转向了zk。

第一个想到用zk来做调度系统的显然是个聪明人，zk中临时节点可以让主机和执行器的上下线变得非常简单，而zk的树形数据结构也使得三者的依赖关系变得非常容易表达，也因此基于zk调度系统的第一步，其实是根据zk的特性，设计符合调度系统需求的数据结构。